function populate() {
    if(quiz.isEnded()) {
        showScores();
    }
    else {
        // show question
        var element = document.getElementById("question");
        element.innerHTML = quiz.getQuestionIndex().text;

        // show options
        var choices = quiz.getQuestionIndex().choices;
        for(var i = 0; i < choices.length; i++) {
            var element = document.getElementById("choice" + i);
            element.innerHTML = choices[i];
            guess("btn" + i, choices[i]);
        }

        showProgress();
    }
};

function guess(id, guess) {
    var button = document.getElementById(id);
    button.onclick = function() {
        quiz.guess(guess);
        populate();
    }
};


function showProgress() {
    var currentQuestionNumber = quiz.questionIndex + 1;
    var element = document.getElementById("progress");
    element.innerHTML = "Question " + currentQuestionNumber + " of " + quiz.questions.length;
};

function showScores() {
    var gameOverHTML = "<h1>Result</h1>";
    gameOverHTML += "<h2 id='score'> Your scores: " + quiz.score + "</h2>";
    var element = document.getElementById("quiz");
    element.innerHTML = gameOverHTML;
};

// create questions
var questions = [
 new Question("The loadable kernel modules for a particular kernel version are normally installed in the directory /proc/modules.", ["TRUE", "FALSE"], "FALSE"),
 new Question("The command to list the loadable kernel modules that are currently loaded is _____.", ["lsmod", "modlist", "list", "listmod"], "lsmod"),
   new Question("The command to load a kernel module ", ["loadmod", "loadmodule","insmod", "insertmod"], "insmod"),
    new Question("The Makefile macro that one sets to identify what file for the kernel Makefile to make into a module is _____.", ["obj-m", "obj-y", "target", "list"], "obj-m"),
    new Question("Which of the following is not a typical advantage of using a loadable kernel module instead of statically linking functionality into a kernel image?", ["Functionality is available before user space has begun", "kernel can be small", "kernel functionality can be added without rebooting", "Speed of development"], "Functionality is available before user space has begun"),
        new Question("Extension of Kernel Modules?", [".ko", ".o", ".out", "None of the above"], ".ko"),
        new Question("Standard location of Kernel Modules?", ["/lib/modules", "/lib", "/usr/lib", "/modules"], "/lib/modules"),
                new Question("Out of tree modules are present in kernel source", ["True", "False", "", ""], "False"),                
        new Question("The command to prints the information of the module. ", ["infomod", "modinfo","insmod", "lsmod"], "modinfo"),
         new Question("Macro to pass parameters to modules.", ["module_param", "mod_param", "moduleparam", "modparam"], "module_param"),
 new Question("Will modprobe /home/path/module.ko works_____.", ["Yes", "No", "", ""], "No"),
 new Question("The command to reload modules.dep file ", ["moddep", "depmod","insmod", "modprobe"], "depmod"),
 new Question("The Makefile macro that one sets to identify what file for the kernel Makefile to change the module name is _____.", ["obj-m", "obj-y", "-objs", "rename"], "-objs"),
 new Question("Which of the following file contains symbols exported by linux kernel modules", ["System.map", "/proc/kallsyms", "/proc/modules", "None of the above"], "/proc/kallsyms"),
 new Question("Can a module compiled for one version works for the other?", ["Yes", "No", "", ""], "No"),
 new Question("Can we write a module without module_init and module_exit", ["Yes", "No", "", ""], "Yes"), 
  new Question("Can I load my kernel module without MODULE_LICENSE Macro?", ["Yes", "No", "", ""], "Yes"),
 new Question("What will be the value of /proc/sys/kernel/taint if the kernel is not tainted", ["1", "-1", "0", "Not Tainted"], "0"),
 new Question("Why a kernel can be tainted? ", ["use of staging drivers", "use of out-of-tree modules","use of a proprietary drivers", "All the above"], "All the above"),
 new Question("The Makefile option for verbose output.", ["V", "V=1", "V=0", "Verbose"], "V=1"),
 new Question("How to find the version of a compiled kernel module?", ["System.map", "lsmod", "/proc/modules", "modinfo"], "modinfo"),
 new Question("Maximum Size of kernel ring buffer is present in which Configuration option?", ["CONFIG_LOG_BUF_SHIFT", "CONFIG_LOG_BUFFER", "CONFIG_LOG_PRINTK_BUFFER", "CONFIG_BUFFER"], "CONFIG_LOG_BUF_SHIFT"),
 new Question("Kernel Function to print stack trace", ["stackdump()", "dumpstack()", "dump_stack()", "call_stack()"], "dump_stack()"),    
 new Question("An OOPS Message contains the following information? ", ["Processor Status", "Contents of CPU Registers","Call Trace", "All the above"], "All the above"),
 new Question("Which file contains symbols exported by Module? ", ["Module.order", "Module.symvers","Module.symbols", "symvers"], "Module.symvers"),
 new Question("Do we need to use KBUILD_EXTRA_SYMBOLS if used exported symbols are present in another external module ?", ["Yes", "No", "", ""], "Yes"),
 new Question("How can i change the default log level?", ["dmesg -s <value>", "dmesg -c <value>", "dmesg -t <value>", "dmesg -n <value>"], "dmesg -s <value>"),
 new Question("How to view pr_debug messages?", ["Enabling DEBUG flag", "Dynamic Debug", "Both", "None"], "Both"),
 new Question("Can i print floating point numbers using printk?", ["Yes", "No", "", ""], "No"),
 new Question("How to print in a single line using two printks", ["KERN_LEVEL", "KERN_CONT", "KERN_DEBUG", "KERN_LINE"], "KERN_CONT"),
 new Question("The behaviour of pr_debug()/dev_dbg() are controlled via writing to a control file in the  filesystem", ["root", "tmp", "swap", "debugfs"], "debugfs"),
  new Question("Which proc file contains the information of number of processors?", ["/proc/processors", "/proc/meminfo", "/proc/cpus", "/proc/cpuinfo"], "/proc/cpuinfo"),
 new Question("In which state process can be awaken by signal?", ["TASK_INTERRUPTIBLE", "TASK_UNINTERRUPTIBLE", "", ""], "TASK_INTERRUPTIBLE"),
 new Question("____ returns a pointer to the task_struct of the currently running process", ["current", "getcurrent", "myprocess", "none"], "current"),
 new Question("Does kernel threads has address space?", ["Yes", "No", "", ""], "No"),
 new Question("What will happen if I don't stop the kernel thread in module_exit", ["oops", "panic", "nothing happens", "system restarts"], "oops"),
  new Question("Device Files are present in ?", ["/proc", "/tmp", "/dev", "/sys"], "/dev"),
 new Question("Is Serial Port Character Device ?", ["Yes", "No", "", ""], "Yes"),
 new Question("Pen drive is not character device ?", ["No", "Yes", "", ""], "Yes"),
 new Question("Connection between the device driver and device file is based on ?", ["Major Number", "Inode Number", "Minor Number", "Device Number"], "Device Number"),
 new Question("___ file displays the major number and device name ?", ["/proc/modules", "/proc/devices", "/proc/cpuinfo", "/proc/cmdline"], "/proc/devices"),
 new Question("Can i have a same major number for both character and block devices ?", ["No", "Yes", "", ""], "Yes"),
 new Question("What is the maximum major number ?", ["511", "512", "4095", "4096"], "511"),
 new Question("Command to create device node manually ?", ["devnode", "makenode", "mknod", "mkdevnode"], "mknod"),
 new Question("Who handles automatic device node creation ?", ["sysfs", "kernel", "udev", "driver"], "udev"),
 new Question("Structure which represents character device ?", ["characterdev", "cdev", "characterdevice", "chardev"], "cdev"),
 new Question("Is /dev/zero pseudo device ?", ["Yes", "No", "", ""], "Yes"),
 new Question("How many times device driver open and release will be called in case of fork? ?", ["1", "2", "0", "None of these"], "1"),
 new Question("Open File in Kernel is represented by ?", ["struct file", "FILE", "struct inode", "int fd"], "struct file"),
 new Question("Disk File in kernel is represented by ?", ["struct file", "FILE", "struct stat", "struct inode"], "struct inode"),
 new Question("Macro to extract the minor number from struct inode", ["MINOR_FROM_INODE", "IMINOR", "iminor", "IMINOR"], "iminor"),
 new Question("Can i directly access user space address in kernel module", ["Yes", "No", "", ""], "No"),
 new Question("Which all are true in case of copy_from_user ?", ["copies a block of data from user space into a kernel buffer", "Returns zero on success", "Returns non-zero to indicate a failure to copy some number of bytes", "All"], "All"),
 new Question("What is the kernel function to read int from user space ?", ["put_user", "copy_to_user", "get_user", "None"], "get_user"),
  new Question("IOCTL is useful for handling special operations which cannot be handled by read/write ?", ["Yes", "No", "", ""], "Yes"),
 new Question("Function pointer of ioctl in f_ops for 64-bit process ?", ["locked_ioctl", "unlocked_ioctl", "ioctl", "None"], "unlocked_ioctl"),
 new Question("What are the bitfields in ioctl code ?", ["Magic Number, Direction", "Command number", "Size", "All the above"], "All the above"),
 new Question("What should be the return value of ioctl in case of invalid command passed as per POSIX", ["EFAULT", "EBUSY", "EINVAL", "ENOTTY"], "ENOTTY"),
 new Question("Will access_ok fails if i pass NULL as user space parameter", ["Yes", "No", "", ""], "No"),
 new Question("put_user is faster than _put_user ?", ["Yes", "No", "", ""], "No"),
 new Question("Function pointer of ioctl in f_ops for 32-bit process running in 64-bit machine ?", ["locked_ioctl", "unlocked_ioctl", "ioctl", "compat_ioctl"], "compat_ioctl"),
  new Question("What is the value of LINUX_VERSION_CODE for kernel version 4.3.10 ?", ["0x040301", "0x040310", "0x040110", "0x040103"], "0x040310"),
 new Question("Macro to build an integer from individual numbers of kernel version ?", ["LINUX_VERSION", "KERNEL_VERSION_CODE", "LINUX_VERSION_CODE", "KERNEL_VERSION"], "KERNEL_VERSION"),
 new Question("___ Macro gives string describe the version of this kernel tree ?", ["LINUX_VERSION", "UTS_RELEASE", "KERNEL_VERSION", "UTS_VERSION"], "UTS_RELEASE"),
 new Question("POSIX Capabilities is a concept which divides root privileges into a set of privileges", ["Yes", "No", "", ""], "Yes"),
 new Question("Command to get and set capabilities of a process", ["capset/capget", "setcap/getcap", "capabset/capabget", "setcapab/getcapab"], "setcap/getcap"),
 new Question("What should be return value if the process is not capable?", ["ENOTTY", "EINVAL", "EBUSY", "EPERM"], "EPERM"),
 new Question("Is misc driver a character driver ?", ["Yes", "No", "", ""], "Yes"),
  new Question("Using virtual file system, device driver/kernel module provide information to system administrator/user ?", ["Yes", "No", "", ""], "Yes"),
  new Question("Which of these are virtual file system ?", ["/proc", "/sys/kernel/debug", "/sys", "All"], "All"),
   new Question("Which of the following are not part of seq_api ?", ["next", "start", "exit", "show"], "exit"),
   new Question("seq_printf works on non seq_file interfaces ?", ["Yes", "No", "", ""], "No"),
   new Question("Do I need to implement my own read,lseek if i use seq_api ?", ["Yes", "No", "", ""], "No"),
    new Question("What is the address space size of 32-bit processor ?", ["1 GB", "2 GB", "3 GB", "4 GB"], "4 GB"),
 new Question("Physical Address space in x86 is used by ?", ["RAM", "I/O Devices", "BIOS", "All"], "All"),
 new Question("Which file shows the memory map in Linux ?", ["/proc/meminfo", "/proc/iomap", "/proc/iomem", "/proc/ioports"], "/proc/iomem"),
 new Question("Addressed used by Linux Kernel are  ?", ["Physical", "Virtual", "Both", "None"], "Both"),
 new Question("Which configuration option decides the user and kernel split in virtual address space of process ?", ["CONFIG_MODULES", "CONFIG_PAGESIZE", "CONFIG_PAGESHIFT", "CONFIG_PAGE_OFFSET"], "CONFIG_PAGE_OFFSET"),
 new Question("Is the kernel address space same for all processes  ?", ["Yes", "No", "", ""], "Yes"),
  new Question("Who maps virtual address to physical addresses ?", ["Linux Kernel", "MMU", "DRAM", "BIOS"], "MMU"),
   new Question("First 896 MB of the 1GB Virtual address space in Linux Kernel is called ?", ["LOWMEM", "HIGHMEM", "", ""], "LOWMEM"),
  new Question("Which  of the following is not a zone from Kernel low memory?" ,["zone_dma", "zone_pci", "zone_highmem", "zone_normal"], "zone_pci"),
    new Question("The physical memory above 896 MB is mapped on demand to the 128 MB of the HIGHMEM region. ?", ["Yes", "No", "", ""], "Yes"), 
   new Question("Which GFP Flag should be used in interupt context. ?", ["GFP_KERNEL", "GFP_ATOMIC", "GFP_HIGHMEM", "GFP_DMA"], "GFP_ATOMIC"), 
     new Question("Memory allocated by kmalloc can be freed with . ?", ["free", "kmallocfree", "kfree", "kmfree"], "kfree"), 
	 new Question("Memory allocated by kmalloc is contiguous in . ?", ["physical memory", "virtual memory", "both", "none"], "both"), 
new Question("Memory returned from kmalloc by default comes from  . ?", ["HIGHMEM", "LOWMEM", "", ""], "LOWMEM"), 
 new Question("Linux kernel divides physical RAM into a number of different memory regions. We call them ?", ["Partitions", "Disks", "Mems", "zones"], "zones"),
 new Question("Within zone, Linux uses ____ to allocate and free physical memory", ["Linear Allocator", "Buddy Allocator", "Binary Allocator", "None"], "Buddy Allocator"),
 new Question("Do we have High Memory zone on a 64-bit system", ["Yes", "No", "", ""], "No"),
 new Question("On 64-bit machines, all RAM from 4GB or so on upwards is in which zone?", ["DMA", "DMA32", "HIGHMEM", "Normal"], "Normal"),
 new Question("All free pages are split into MAX_ORDER lists", ["Yes", "No", "", ""], "Yes"),
 new Question("Can I use virt_to_phys to get the physical address returned by malloc", ["Yes", "No", "", ""], "No"),
 new Question("What is the maximum size allocatable using kmalloc?", ["2^(MAX_ORDER + PAGE_SHIFT - 1)", "2^(PAGE_SHIFT)", "2^(MAX_ORDER)", "2^(MAX_ORDER + PAGE_SHIFT)"], "2^(MAX_ORDER + PAGE_SHIFT - 1)"),
 new Question("Will the kernel memory freed automatically?", ["Yes", "No", "", ""], "No"),
 new Question("kmalloc may internally round up allocations and return more memory than requested.", ["Yes", "No", "", ""], "Yes"),
 new Question(" Memory returned by vmalloc is only contiguous in virtual memory and not in physical memory", ["Yes", "No", "", ""], "Yes"),
 new Question("What is the size of process kernel stack ", ["1KB", "8KB", "16KB", "4KB"], "16KB"),
  new Question("In linked list implementation, the first element is often represented by a special pointer  ?", ["Tail", "Start", "Head", "First"], "Head"),
  new Question("___ function adds the new node to the given list immediately after the head node  ?", ["add_node", "list_add", "add_list", "node_add"], "list_add"),
    new Question("Can I pass a list_head structure that happens to be in the middle of the list somewhere to list_add  ?", ["yes", "no", "", ""], "yes"),
    new Question("list_add_tail is good for implementing stacks  ?", ["yes", "no", "", ""], "no"),
	    new Question("macro to find the parent structure from list_head  ?", ["list_entry", "parent_list", "list_macro", "getparent"], "list_entry"),
			    new Question("To delete a node from a linked list use  ?", ["list_del", "list_delete", "delete_node", "node_del"], "list_del"),
                new Question("Can there be concurrency on a uniprocessor machines  ?", ["Yes", "No", "", ""], "Yes"),
 new Question("True parallelism achieved in uniprocessor machines  ?", ["Yes", "No", "", ""], "No"),
 new Question("Command to find out number of processors on the system  ?", ["proc", "getproc", "nproc", "cproc"], "nproc"),
 new Question("Is Linux Kernel Preemptive ?", ["Yes", "No", "", ""], "Yes"),
 new Question("Linux kernel have  ?", ["Reentrant functions", "Non Reentrant functions", "Both", "None"], "Both"),
 new Question("section of code that should be finished by each process that begins it before another process can enter is", ["Reentrancy", "Secure Region", "Critical Region", "Race condition"], "Critical Region"),
 new Question("which of the following is not a synchronization technique", ["Disabling Hardware Interrupts", "Atomic operations", "Enabling Hardware Interrupts", "Disabling kernel preemption"], "Enabling Hardware Interrupts"),
  new Question("____gives you the current processor number on which kernel is running ", ["proc_id()", "smp_id()", "smp_processor_id()", "smpprocessorid()"], "smp_processor_id()"),
 new Question("Do we need kernel preemption in case of Per CPU Variables", ["Yes", "No", "", ""], "Yes"),
 new Question("Can I perform '++' operation on atomic variables as it is just int  ?", ["Yes", "No", "", ""], "No"),
 new Question("Do atomic operations needs to be implemented by each and every  architecture ?", ["Yes", "No", "", ""], "Yes"),
 new Question("A common use of the atomic integer operations is to implement counters ?", ["Yes", "No", "", ""], "Yes"),
 new Question("the nonatomic form of test_bit() is ?", ["__test_bit()", "testbit()", "_test_bit()", "test_bit_()"], "__test_bit()"),
 new Question("Can atomic operations work with shared data structures of custom size ?", ["Yes", "No", "", ""], "No"),
 new Question("On a uniprocessor machine When CONFIG_PREEMPT is not set/kernel preemption disabled spin_lock =  ?", ["No operation", "acquires lock", "release locks", "None of these"], "No operation"),
 new Question("Linux kernel’s spin locks are recursive?", ["Yes", "No", "", ""], "No"),
 new Question("Can i use spin_lock() when global data is shared between driver and interrupt code?", ["Yes", "No", "", ""], "No"),
 new Question("Is the kernel preemption disabled when the spinlock is acquired? ", ["Yes", "No", "", ""], "Yes"),
  new Question("Code that is protected by spinlocks can go to sleep? ", ["Yes", "No", "", ""], "No"),
 new Question("Can I sleep while holding a semaphore lock  ?", ["Yes", "No", "", ""], "Yes"),
 new Question("What happens to the count value when we call down()  ?", ["Decremented by 1", "Incremented by 1", "Decremented by 1 only if count > 0", "Incremented by 1 only if count > 0"], "Decremented by 1 only if count > 0"),
 new Question("Semaphores with counting value > 1 are binary semaphores ?", ["Yes", "No", "", ""], "No"),
 new Question("Can i use counting semaphores in critical section?", ["Yes", "No", "", ""], "No"),
 new Question("Is kernel preemption disabled after acquiring semaphore lock?", ["Yes", "No", "", ""], "No"),
 new Question("Can i use semaphores in interrupt context?", ["Yes", "No", "", ""], "No"),
 new Question("Can I lock a mutex in one context and unlock in another?", ["Yes", "No", "", ""], "No"),
 new Question("Recursive locks are not allowed in mutex?", ["Yes", "No", "", ""], "Yes"),
 new Question("Can i use mutexes in interrupt context?", ["Yes", "No", "", ""], "No"),
 new Question("which locking technique will have low overhead?", ["spinlock", "semaphore", "mutex", ""], "spinlock"),
 new Question("Advantage of rwlock over spinlock/mutex", ["multiple readers can enter into critical section", "multiple writers can enter into critical section", "multiple readers/writers can enter into critical section", "None"], "multiple readers can enter into critical section"),
 new Question("reader/writer locks are also called", ["shared/exclusive locks", "concurrent/exclusive", "both", "None"], "both"),
 new Question("Will the code snippet successfully execute read_lock(&mylock); write_lock(&mylock);", ["yes", "no", "", ""], "no"),
 new Question("It is note safe for the same thread to recursively obtain the same read lock", ["yes", "no", "", ""], "no"),
 new Question("It is note safe for the same thread to recursively obtain the same read lock", ["yes", "no", "", ""], "no"),
 new Question("reader-writer semaphores usage count is", ["1", "2", "0", "None"], "1"),
 new Question("down_read/down_write may put the calling process into", ["TASK_INTERRUPTIBLE", "TASK_UNINTERRUPTIBLE", "TASK_RUNNING", "TASK_KILLABLE"], "TASK_UNINTERRUPTIBLE"),
 new Question("reader-writer semaphores usage count is", ["1", "2", "0", "None"], "1"),
 new Question("Do you need lock while performing read operation using seqlock", ["yes", "no", "", ""], "no"),
 new Question("Do you need lock while performing write operation using seqlock", ["yes", "no", "", ""], "yes"),
 new Question("writer is given lower priority in case of seqlock", ["yes", "no", "", ""], "no"),
 new Question("Which all are true regarding when to use seqlocks", ["small amount of data is to be protected", "data has a lot of readers", "writers not be starved for access", "All"], "All"),
 new Question("write operation in seqlock uses semaphores for mutual exclusion", ["yes", "no", "", ""], "no"),
 new Question("write_sequnlock() decrements the sequence number again, then releases the spinlock", ["yes", "no", "", ""], "no"),
 new Question("Is kernel preemption disabled during write operation in seqlocks", ["yes", "no", "", ""], "yes"),
 new Question(" Which data structure contains the list of all processes which are in TASK_RUNNING state", ["linked list", "run queue", "hash table", "stack"], "run queue"),
 new Question(" Do I need to call set_current_state before calling schedule() ", ["yes", "no", "", ""], "yes"),
 new Question(" Which function wakes up the sleeping process ", ["woke_up", "wake_up_process", "woke_up_process", "none"], "wake_up_process"),
 new Question(" Does msleep function uses schedule_timeout ", ["yes", "no", "", ""], "yes"),
 new Question(" All the processes present in the wait queue are woken up by the kernel on event are called exclusive process", ["yes", "no", "", ""], "no"),
 new Question(" Can i call wait_event() function while holding a lock?", ["yes", "no", "", ""], "no"),
 new Question(" Can i call wake_up() function while holding a lock?", ["yes", "no", "", ""], "yes"),
 new Question(" Once woken up, there is no guarantee that the condition which the process is waiting for using wait_event() is true.", ["yes", "no", "", ""], "yes"),
new Question("To complete each machine instruction, the processor goes through fetch/decode/execute/store stages?", ["True", "False", "", ""], "True"),
 new Question("For optimum performance, it is very important to keep all the pipeline stages as busy as possible?", ["True", "False", "", ""], "True"),
 new Question("____ is a Digital Circuit that tries to guess which way a branch will go before this is known definitively", ["Branch guesser", "Branch finder", "Branch Predicter", "None"], "Branch Predicter"),
 new Question("likely and unlikely uses gcc function?", ["expect", "branch_expect", "hint_predictor", "__builtin_expect"], "__builtin_expect"),
 new Question("Completions are built on top of the waitqueue and wakeup infrastructure of the Linux scheduler", ["True", "False", "", ""], "True"),
 new Question("Advantages of completions over semaphore ___", ["Completions are optimized for blocking scenario", "Multiple threads waiting can be unblocked with single call", "Both", "None"], "Both"),
 new Question("Can wait_for_completion() and its variants are safe to use in atomic/interrupt contexts?", ["Yes", "No", "", ""], "No"),
 new Question(" each call to complete() will simply decrement the done field.", ["Yes", "No", "", ""], "No"),
 new Question(" What is the default operation in Linux when you call read() and there is no data ?", ["block", "nonblock", "", ""], "block"),
 new Question(" How do i specify a non blocking I/O in linux through my user application?", ["O_NONBLOCK", "O_NONBLOCKING", "O_DIRECT", "NONE"], "O_NONBLOCK"), 
 new Question(" What is the default operation in Linux when you call read() and there is no data ?", ["block", "nonblock", "", ""], "block"),
 new Question(" How do i specify a non blocking I/O in linux through my user application?", ["O_NONBLOCK", "O_NONBLOCKING", "O_DIRECT", "NONE"], "O_NONBLOCK"), 
 new Question(" First argument of select should be set to the highest numbered file descriptor in any of the three sets?", ["Yes", "No", "", ""], "No"),
 new Question(" There is a limit on number of file descriptors which we can pass to select?", ["Yes", "No", "", ""], "Yes"),
 new Question(" select modifies the descriptor sets pointed to by the readset, writeset, and exceptset pointers.?", ["Yes", "No", "", ""], "Yes"),
 new Question(" select() performs very poorly once the file descriptors get large?", ["Yes", "No", "", ""], "Yes"),
  new Question(" Major Linux Kernel Release happens every two or three months? ", ["Yes", "No", "", ""], "Yes"),
 new Question(" How do you find out the MAINTAINER of a particular file in Linux Kernel _________ ", ["MAINTAINERS", "DEVELOPERS", "MAINTAINER", "DEVELOPER"], "MAINTAINERS"),
 new Question(" Can i directly submit patches to Linus Torvalds? ", ["Yes", "No", "", ""], "No"),
 new Question(" Each and every maintainer has its own tree? ", ["Yes", "No", "", ""], "Yes"),
 new Question(" Merge window opened by Linux is of ___ weeks ", ["1", "3", "4", "2"], "2"),
 new Question(" Once released by Linus, its will be moved to stable branch for bug fixes ", ["No", "Yes", "", ""], "Yes"),
 new Question(" Last kernel of the year is selected as LTS? ", ["Yes", "No", "", ""], "Yes"),
  new Question(" ____ contains list of files that were indexed by cscope? ", ["cscope.file", "cscope.files", "cscope.out", "cscope.in"], "cscope.files"),
   new Question(" grep is faster than cscope? ", ["Yes", "No", "", ""], "No"),
new Question(" How do you exit from cscope? ", ["CTRL+A", "CTRL+C", "CTRL+B", "CTRL+D"], "CTRL+D"),
 new Question(" cscope supports auto completion? ", ["Yes", "No", "", ""], "No"),
 new Question(" ctags supports auto completion? ", ["Yes", "No", "", ""], "Yes"),
 new Question(" Can I list all the references of a symbol in vim using Ctags like cscope? ", ["Yes", "No", "", ""], "No"),
 new Question(" lxr is Code indexing tool with a web interface? ", ["Yes", "No", "", ""], "Yes"),
  new Question(" Ctags return from definition? ", ["CTRL+A", "CTRL+]", "CTRL+T", "CTRL+|"], "CTRL+T"),
 new Question(" Ctags jump to definition? ", ["CTRL+A", "CTRL+]", "CTRL+T", "CTRL+|"], "CTRL+]"),
  new Question(" Memory Mapped IO and Port Mapped IO are the two methods of performing input/output (I/O) between the CPU and the peripheral devices? ", ["Yes", "No", "", ""], "Yes"),
   new Question(" In Port Mapped IO CPU instructions used to access the memory can also be used for accessing devices ", ["Yes", "No", "", ""], "No"),
new Question(" X86 systems employ both-types of I/O ", ["Yes", "No", "", ""], "Yes"),
 new Question(" On X86 machine, we have a separate pin IO/M to distinguish between memory and I/O operations", ["Yes", "No", "", ""], "Yes"),
 new Question(" ____ will give information about all I/O addresses currently assigned to I/O devices", ["/proc/iomem", "/proc/ioports", "/proc/ioaddr", "/proc/ioaddress"], "/proc/ioports"),
 new Question(" cat /proc/ioports does it list all the I/O Ports used by the processor? ", ["Yes", "No", "", ""], "No"),
 new Question(" In memory mapped I/O CPU instructions used to access the memory can also be used for accessing devices ", ["Yes", "No", "", ""], "Yes"),
  new Question(" All peripheral(I/O) devices are controlled by writing and reading its registers.", ["Yes", "No", "", ""], "Yes"),
 new Question(" ___ Carries Control and Signal Information ", ["Address Bus", "Data Bus", "Control Bus", "___"], "Control Bus"),
  new Question(" On a Key press, keyboard will send ASCII code to the PC? ", ["Yes", "No", "", ""], "No"),
  new Question(" I/O ports of keyboard? ", ["0x60", "0x64", "Both", "None"], "Both"),
  new Question(" Can i access I/O Ports from user space? ", ["Yes", "No", "", ""], "Yes"),
  new Question(" Permission for I/O ports on Linux is controlled by? ", ["ioperm", "iopl", "Both", "None"], "Both"),
  new Question(" ______ performs timing and counting functions using three 16-bit counters ", ["8042", "8086", "8254", "None"], "8254"),
    new Question("Advantage of memory mapped I/O is that it keeps the instruction set small? ", ["Yes", "No", "", ""], "Yes"), 
  new Question("cat ____ lists all the kernel drivers requested 'request_mem_region'? ", ["/proc/ioports", "/dev/ports", "/dev/iomem", "/proc/iomem"], "/proc/iomem"),
  new Question("can we access(read/write) MMIO memory directly ", ["Yes", "No", "", ""], "No"), 
  new Question("____  is a character device file that is an image of the main memory of the computer", ["/dev/mem", "/dev/fmem", "/dev/ioports", "/dev/amem"], "/dev/mem"), 
  new Question("____ kernel configuration option limits the areas which can be accessed through /dev/mem? ", ["CONFIG_STRICT_MEM", "CONFIG_STRICT_DEVMEM", "", ""], "CONFIG_STRICT_DEVMEM"),  
  new Question("sysfs is a virtual file system? ", ["Yes", "No", "", ""], "Yes"), 
  new Question("___ contains one subdirectory for each module that is loaded into the kernel'? ", ["/sys/kernel", "/sys/module", "/sys/power", "/sys/bus"], "/sys/module"),
  new Question("____ is the heart of the device model ", ["kref", "ktype", "kobject", "None"], "kobject"), 
  new Question("kobjects map to files", ["Yes", "No", "", ""], "No"), 
  new Question("attributes map to files ", ["Yes", "No", "", ""], "Yes"),  
  new Question("synchronous interrupts are also called as exceptions ", ["Yes", "No", "", ""], "Yes"),
  new Question("Breakpoints are implemented on the CPU by a special trap called ", ["int 0", "int 1", "int 3", "int 2"], "int 3"),
  new Question(" ____ Interrupt is requested by holding the interrupt signal at its particular (high or low) active logic level", ["edge triggered", "level triggered", "", ""], "level triggered"),
  new Question("Interrupts which cannot be disabled are called as ____ interrupt", ["maskable", "non-maskable", "", ""], "maskable"),
  new Question(" PIC allows multiplexing the single INT line on the x86 processor to multiple interrupt lines", ["Yes", "No", "", ""], "Yes"),
  new Question("PIC can be used in multiprocessor configuration ", ["Yes", "No", "", ""], "No"),
  new Question("IOAPIC has ___ interrupt lines ", ["24", "16", "20", "15"], "24"),
  new Question("Up to ___ unique interrupt vectors are available in x86", ["128", "256", "32", "64"], "256"),
  new Question("____ is the common function for all hardware interrupts", ["do_irq()", "do_interrupt()", "do_int()", "None"], "do_irq()"),
  new Question("____ file Contains statistics related to interrupts on the system", ["/proc/interrupts", "/proc/intr", "/proc/cpuinfo", "None"], "/proc/interrupts"),
    new Question("What are advantages of Inline Assembly ", ["Optimization", "Access to Processor Specific Instructions", "Both", "None"], "Both"),
  new Question("EAX is __ bit register ", ["16", "8", "32", "64"], "32"),
  new Question("RAX is __ bit register ", ["16", "8", "32", "64"], "64"),
  new Question("GCC supports __ kind of assembly instructions", ["basic", "extended", "Both", "None"], "Both"),
  new Question("____ informs the compiler specifies that the assembly statement may produce side effects", ["volatile", "asm", "operands", "none of these"], "volatile"),
  new Question(" __ percent sign must be specified in C source code for registers", ["Zero", "One", "Two", "Three"], "Two"),
  new Question("Literal values are prefixed with a ___ sign", ["$", "%", "=", "#"], "$"),
  new Question("de-referencing of pointers are possible by including a register in ____", ["square brackets", "curly braces", "parentheses", "none of these"], "parentheses"),
  new Question("each instruction in assembler template should be separated by ___ character", ["new line", "!", "@", "#"], "new line"),
  new Question("____  constraint means that the output is actually a read-write value", ["=", "+", "", ""], "+"),
  new Question("_____ constraint means that the output is actually a read-write value", ["=", "+", "", ""], "="),
  new Question("If r constraint is used, gcc may keep the value of 'val' in any register.", ["True", "False", "", ""], "True"),
  new Question("____ constraint specifies that an address in memory is used.", ["r", "a", "b", "m"], "m"),
  new Question("____ constraint represents an immediate integer operand", ["r", "a", "i", "m"], "i"),
    new Question("___ instruction is used to clear interrupt flag", ["nop", "clearif", "cli", "clear"], "cli"),
  new Question("___ instruction is used to set interrupt flag", ["nop", "setif", "sei", "set"], "sei"),
  new Question("Can i use cli/sei from user space program without changing privilege level ", ["No", "Yes", "", ""], "No"),
  new Question("Does executing CLI instruction disable interrupts on other processors", ["Yes", "No", "", ""], "No"), 
  new Question("____ instruction halts the CPU until the next interrupt is fired  ", ["nop", "hlt", "cli", "sei"], "hlt"),
  new Question("I/O privilege level (IOPL) is a two-bit variable that controls how much privilege a process must have to access I/O ports", ["yes", "no", "", ""], "yes"),  
  new Question("On a single processor system, if an operation is implemented in a single CPU instruction, it is always atomic", ["yes", "no", "", ""], "yes"),  
  new Question("Techniques for atomicity ", ["spinlock", "disabling interrupts", "both", "none"], "both"),
  new Question("LOCK is an instruction ", ["Yes", "No", "", ""], "No"),
  new Question("Which register is used for passing argument to cpuid ", ["ebx", "ecx", "eax", "edx"], "eax"),
  new Question("___ instruction is used to read the current value of the CPU's time-stamp counter", ["rdtsc", "readtsc", "readtimestamp", "none"], "rdtsc"),
  new Question("On X86, user processes runs on ring __", ["0", "1", "2", "3"], "3"),
  new Question("On X86, kernel run on ring __", ["0", "1", "2", "3"], "0"),
  new Question("___ is used to identify a system call", ["function address", "system call number", "", ""], "system call number"),
  new Question("___ maps the system call number to system call handler", ["interrupt table", "system call table", "", ""], "system call table"),
  new Question("___ register holds the system call number in x86", ["eax", "rax", "ebx", "rbx"], "eax"),
  new Question("___ register holds the system call number in x86_64", ["eax", "rax", "ebx", "rbx"], "rax"),
  new Question("system call parameters are written in the CPU registers before issuing the system call", ["Yes", "No", "", ""], "Yes"),
  new Question("int $0x80 uses software interrupt, so it is fast.", ["True", "False", "", ""], "False"),
  new Question("Sysenter and syscall are fast system calls", ["True", "False", "", ""], "True"),
  new Question("The errno variable is not set or used by the Linux Kernel", ["True", "False", "", ""], "True"),
  new Question("syscall stores any error code returned by the system call in errno if an error occurs", ["True", "False", "", ""], "True"),
  new Question("Non implemented system calls returns", ["-EINVAL", "-ENOSYS", "-EFAULT", "-ENOMEM"], "-ENOSYS"),
  new Question(" The  vDSO is a small shared library that the kernel automatically maps into the address space of all user-space applications.", ["True", "False", "", ""], "True"),
  new Question("SYSCALL_DEFINEn is a family of macros that make it easy to define a system call with N arguments", ["Yes", "No", "", ""], "Yes"),
  new Question("__tells the compiler that the function should expect arguments on CPU Stack", ["inline", "extern", "asmlink", "asmlinkage"], "asmlinkage"),
  new Question("The system C library will automatically take that negative value  returned by system call and put the appropriate value in the errno variable in user-space", ["Yes", "No", "", ""], "Yes"), 
  new Question("64 bit linux kernel supports _ abi", ["x86_64", "i386", "x32", "All"], "All"),
  new Question("Applications using the x32 ABI will run on systems with 32-bit kernels", ["Yes", "No", "", ""], "No"),
  new Question("symbol is a name representing an space in memory which stores data and instructions", ["Yes", "No", "", ""], "Yes"),
  new Question("___ Contains symbols exported by code built into the kernel + loadable kernel modules", ["System.map", "/proc/kallsyms", "", ""], "/proc/kallsyms"),
  new Question("___ command can be used to get list of symbols from object file", ["ls", "nm", "mn", "None"], "nm"),
  new Question("can i use the function pointer returned by the kallsyms_lookup_name() to call the function?", ["Yes", "No", "", ""], "Yes"),
  new Question("syscall table is inside a page that is ____", ["read-only", "write-only", "read-write", "None"], "read-only"),
    new Question("Command to get the current date/time in Linux?", ["uptime", "date", "time", "today"], "date"),
  new Question("Command to find out how long your system is up?", ["date", "howlong", "time", "uptime"], "uptime"),
  new Question("Epoch time is Number of seconds that have elapsed since January 1 1970.", ["No", "Yes", "", ""], "Yes"),
  new Question("Can I use gettimeofday() to determine elapsed time?", ["No", "Yes", "", ""], "No"),
  new Question("To safely measure elapsed time in a program, you need to use monotonic clock", ["No", "Yes", "", ""], "Yes"),
   new Question("Linux timing subsystem handles ", ["Keeping the current time and date", "Maintaining Timers", "Both", "None"], "Both"),
  new Question("___ issue interrupts at fixed, predefined frequency ", ["Clocks", "Timers", "Both", "None"], "Timers"),
  new Question("RTC is backed by a small battery, which will allow it to tick even when the system is turned off.", ["Yes", "No", "", ""], "Yes"),
  new Question("___ command reads the date/time from RTC hardware clock ", ["clock", "rtc", "date", "hwclock"], "hwclock"),
  new Question("RTC Can generate interrupts ", ["on every clock update", "at periodic intervals with a frequency", "on reaching a previously specified alarm time", "All of these"], "All of these"),
  new Question("Real Time clock is not used after computer is powered on as accessing registers is slow ", ["No", "Yes", "", ""], "Yes"),
  new Question("TSC is a special register which is simply incremented every 10 clock cycle", ["Yes", "No", "", ""], "No"),
  new Question("The time-stamp counter can be read by software using the ____ instruction", ["rdt", "readtimestamp", "rdts", "rdtsc"], "rdtsc"),
  new Question("A programmable interval timer (PIT) is a counter that generates an output signal when it reaches a programmed count. ", ["No", "Yes", "", ""], "Yes"),
    new Question("The frequency of the timer interrupt is programmed on system boot based on static preprocessor define HZ.", ["Yes", "No", "", ""], "Yes"),
  new Question("Every time a timer interrupt occurs, the value of an jiffies is incremented twice", ["Yes", "No", "", ""], "No"),
  new Question("what is size of jiffies?", ["unsigned long", "int", "char", "float"], "unsigned long"),
  new Question("What is the initial value of jiffies on boot?", ["0", "-1", "HZ", "INITIAL_JIFFIES"], "INITIAL_JIFFIES"),
  new Question("BogoMips value is the number of busy loop iterations the processor can perform in a given period", ["Yes", "No", "", ""], "Yes"),
  new Question("Power consumption is reduced with periodic ticks", ["Yes", "No", "", ""], "No"),
  new Question("Dynamic ticks significantly improves battery life in laptops", ["Yes", "No", "", ""], "Yes"),
    new Question("Kernel Timers are cyclic ", ["False", "True", "", ""], "False"),
  new Question("Expires field  in kernel times represents the _____ value when the timer is expected to run", ["seconds", "milliseconds", "jiffies", "none"], "jiffies"),
  new Question("Kernel timers runs in which context", ["interrupt", "process", "", ""], "interrupt"),
  new Question("The kernel executes timers in bottom-half context, as softirqs, after the timer interrupt completes", ["False", "True", "", ""], "True"),
  new Question("kernel checks all the timer entries in linked list on each raise softirq? ", ["False", "True", "", ""], "False"),
  new Question("schedule_timeout internally uses kernel timers", ["False", "True", "", ""], "True"),
  new Question("low resolution is the problem with kernel timers", ["False", "True", "", ""], "True"),
  new Question("High Res Timers based on ktime_t ", ["False", "True", "", ""], "True"),
  new Question("On 64-bit systems, a ktime_t is really just a 32-bit integer value in nanoseconds", ["False", "True", "", ""], "False"),
  new Question("____ clock is  useful for reliable timestamps and measuring short time intervals accurately", ["CLOCK_MONOTONIC", "CLOCK_REALTIME", "", ""], "CLOCK_MONOTONIC"),
  new Question("CLOCK_MONOTONIC starts at system boot time and stops at SUSPEND ", ["False", "True", "", ""], "True"),
  new Question("____ is used to get wall time", ["ktime_get()", "ktime_get_boottime()", "ktime_get_real()", "All"], "ktime_get_real()"),
  new Question("Coarse grained versions are slower than non coarse grained versions", ["False", "True", "", ""], "False"),
  new Question("Coarse grained versions are less accurate than non coarse grained versions ", ["False", "True", "", ""], "True"),
  new Question("hrtimers live on a time-sorted linked list, with the next timer to expire being at the head of the list ", ["False", "True", "", ""], "True"),
  new Question("Every hrtimer is bound to a CLOCK_MONOTONIC clock. ", ["False", "True", "", ""], "False"),
  new Question("___ return value for recurring timer", ["HRTIMER_RESTART", "HRTIMER_STOP", "HRTIMER_NORESTART", "HRTIMER_CONTINUE"], "HRTIMER_RESTART"),
  new Question("A canceled timer can be restarted by passing it to hrtimer_cancel() ", ["False", "True", "", ""], "False"),
  new Question("When the clock event device responsible for high-resolution timers raises an interrupt, hrtimer_interrupt is called as event handler ", ["False", "True", "", ""], "True"),



    

 
  


 

 
        

];


// create quiz
var quiz = new Quiz(questions);

// display quiz
populate();




